z2 <- z %>%
dplyr::mutate(year = lubridate::year(z$dt),
month = lubridate::month(z$dt),
day = lubridate::day(z$dt))
result <- aggregate(z2$AverageTemperature ~ z2$year, z2, mean)
x <- read.csv(file = "GlobalLandTemperaturesByMajorCity.csv")
result2 <- aggregate(z2$AverageTemperature ~ z2$year, z2, range)
rr <- range(result2$`z2$AverageTemperature`)
svals <- (result2$`z2$AverageTemperature`-rr[1])/diff(rr)
f <- colorRamp(c("lightblue","blue", "red", "darkred"))
colors <- rgb(f(svals)/300)
output$plot <- renderPlot({
ggplot(result, aes(x = unlist((result$`z2$year`)), y = unlist(result$`z2$AverageTemperature`))) + geom_point() + geom_smooth()
})
get_globe_data <- reactive({
df <- filter(x, as.Date(x$dt) == input$select)
})
output$globe <- renderGlobe({
data <- get_globe_data()
globejs(bg = "black", lat = data$Latitude, long = data$Longitude, value = data$AverageTemperature)
})
output$art <- renderPlot({
image(seq_along(svals), 1, as.matrix(seq_along(svals)), col=colors,
axes=FALSE, xlab="Years", ylab="")
})
}
library(shiny)
library(lubridate)
library(dplyr)
library(ggplot2)
library(threejs)
server <- function(input, output) {
z <- read.csv(file = "USTemp.csv")
z2 <- z %>%
dplyr::mutate(year = lubridate::year(z$dt),
month = lubridate::month(z$dt),
day = lubridate::day(z$dt))
result <- aggregate(z2$AverageTemperature ~ z2$year, z2, mean)
x <- read.csv(file = "GlobalLandTemperaturesByMajorCity.csv")
result2 <- aggregate(z2$AverageTemperature ~ z2$year, z2, range)
rr <- range(result2$`z2$AverageTemperature`)
svals <- (result2$`z2$AverageTemperature`-rr[1])/diff(rr)
f <- colorRamp(c("lightblue","blue", "red", "darkred"))
colors <- rgb(f(svals)/300)
output$plot <- renderPlot({
ggplot(result, aes(x = unlist((result$`z2$year`)), y = unlist(result$`z2$AverageTemperature`))) + geom_point() + geom_smooth()
})
get_globe_data <- reactive({
df <- filter(x, as.Date(x$dt) == input$select)
})
output$globe <- renderGlobe({
data <- get_globe_data()
globejs(bg = "black", lat = data$Latitude, long = data$Longitude, value = data$AverageTemperature)
})
output$art <- renderPlot({
image(seq_along(svals), 1, as.matrix(seq_along(svals)), col=colors,
axes=FALSE, xlab="Years", ylab="")
})
}
<<<<<<< HEAD
library(shiny)
library(lubridate)
library(dplyr)
library(ggplot2)
library(threejs)
=======
# Define UI for app that draws a histogram ----
ui <- fluidPage(
includeCSS("styles.css"),
<<<<<<< HEAD
titlePanel("Application Title"),
tags$div(class="header", checked=NA,
tags$img(src = "http://media-s3-us-east-1.ceros.com/business-insider/images/2017/12/08/f7e1c323169d464797c86b950ea93eca/bi-graphics-02-greenhouse-gas-effect-warmed.gif", width = "100%", height = "100%")
),
tags$div(class="header", checked=NA,
h2("Overview"),
h3("Project Overview"),
p("Climate change is the number one global issue;
=======
#titlePanel("Application Title"),
tags$div(class="header", checked=NA,
tags$img(class="img", src = "http://media-s3-us-east-1.ceros.com/business-insider/images/2017/12/08/f7e1c323169d464797c86b950ea93eca/bi-graphics-02-greenhouse-gas-effect-warmed.gif", width = "78%", height = "78%")
),
tags$div(class="main", margin="0 50px", checked=NA,
h2("Overview"),
h3("Project Overview"),
p("Climate change is the number one global issue;
>>>>>>> 95e795910f29420f2f2e3cb81715d2da5cbfba85
rise in temperatures cause more severe weather,
crises with food and resources, and the spread of diseases.
This project provides information about rising temperatures,
CO2 emissions, and hurricanes that occur in the U.S.
Utilizing three datasets of annual average temperature,
annual CO2 emissions, and the number and severity of hurricanes
in the U.S. from 1900-2013, our team created visualizations for
readers to see the upward trend and connection of the consequences
<<<<<<< HEAD
of CO2 emissions on rising temperatures which catalyze natural."),
h3("Audience"),
p("This information is for anyone who is interested in the well-being
of our Earth and are curious about the negative effects of the rise
in CO2 emissions."),
h3("Data"),
p("Berkeley Earth (2013). Climate Change: Earth Surface Temperature Data;
Exploring global temperatures since 1750 [CSV File]. Retrieved from",
tags$a(href="https://www.kaggle.com/berkeleyearth/climate-change-earth-surface-temperature-data?fbclid=IwAR15pLhLDhfjHpjNu6k9_Nsgxj0NAQaJ3c_Gca0ILzLHuI_XDxxyiqTfI7I#GlobalLandTemperaturesByMajorCity.csv",
"here.")),
p("Thomas Boden, Gregg Marland, Robert Andres (2017). BP Statistical Review of World Energy [CSV File]. Retrieved from",
tags$a(href="https://www.globalcarbonproject.org/carbonbudget/18/data.htm?fbclid=IwAR3sVj1bOtncfY6FOBUG2266-1AsjJdWkZbTB84hntEgQ2zxZgLQc9K8aEk",
"here.")),
p("HURDAT (Hurricane Database) of the National Oceanic & Atmospheric Administration (NOAA) (2018). Data on Continental US Hurricane Impacts/Landfalls 1851-2018 [CSV File]. Retrieved from",
tags$a(href="https://ourworldindata.org/natural-disasters?fbclid=IwAR2CyKDcev7c9aDooU3n8RSqQpwvKlSNKoGhLFbpfJt4xIgySVP75f72edc",
"here.")),
h3("Structure"),
p("Contents go here"),
h3("Analytics"),
p("Contents go here"),
h3("Creators"),
p("Contents go here"),
),
tags$div(class="first", checked=NA,
h2("Rising temperatures and CO2 emissions"),
#EXAMPLE-------------------------------------------------------------
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Slider for the number of bins ----
dateInput(inputId = "select",
label = "Choose Date:",
min = "1849-01-01",
max = "2013-01-09",
value = "1990-01-01")
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Histogram ----
plotOutput(outputId = "globe")
)
)
),
#-------------------------------------------------------------
tags$div(class="second", checked=NA,
h2("Average Temperature Rise"),
mainPanel(
plotOutput(outputId = "plot")
)
),
tags$div(class="third", checked=NA,
h2("Gradient Rise"),
mainPanel(
plotOutput(outputId = "art")
)
)
)
=======
of CO2 emissions on rising temperatures which catalyze natural
disasters such as hurricanes that affect thousands of people."),
h3("Audience"),
p("This information is for anyone who is interested in the well-being
of our Earth and are curious about the negative effects of the rise
in CO2 emissions."),
h3("Data"),
p("Berkeley Earth (2013). Climate Change: Earth Surface Temperature Data;
Exploring global temperatures since 1750 [CSV File]. Retrieved from",
tags$a(href="https://www.kaggle.com/berkeleyearth/climate-change-earth-surface-temperature-data?fbclid=IwAR15pLhLDhfjHpjNu6k9_Nsgxj0NAQaJ3c_Gca0ILzLHuI_XDxxyiqTfI7I#GlobalLandTemperaturesByMajorCity.csv",
"here.")),
p("Thomas Boden, Gregg Marland, Robert Andres (2017). BP Statistical Review of World Energy [CSV File]. Retrieved from",
tags$a(href="https://www.globalcarbonproject.org/carbonbudget/18/data.htm?fbclid=IwAR3sVj1bOtncfY6FOBUG2266-1AsjJdWkZbTB84hntEgQ2zxZgLQc9K8aEk",
"here.")),
p("HURDAT (Hurricane Database) of the National Oceanic & Atmospheric Administration (NOAA) (2018). Data on Continental US Hurricane Impacts/Landfalls 1851-2018 [CSV File]. Retrieved from",
tags$a(href="https://ourworldindata.org/natural-disasters?fbclid=IwAR2CyKDcev7c9aDooU3n8RSqQpwvKlSNKoGhLFbpfJt4xIgySVP75f72edc",
"here.")),
h3("Structure"),
p("Contents go here"),
h3("Analytics"),
p("Contents go here"),
h3("Creators"),
p("Contents go here"),
),
tags$div(class="first", checked=NA,
h2("co2 emission"),
#EXAMPLE-------------------------------------------------------------
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Slider for the number of bins ----
sliderInput(inputId = "bins",
label = "Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Histogram ----
plotOutput(outputId = "distPlot")
)
)
#-------------------------------------------------------------
),
tags$div(class="second", checked=NA,
h2("avg temp rise"),
#GRAPH-------------------------------------------------------------
#------------------------------------------------------------------
),
tags$div(class="third", checked=NA,
h2("hot and cold graph")
#GRAPH-------------------------------------------------------------
#------------------------------------------------------------------
),
)
# Define server logic required to draw a histogram ----
server <- function(input, output) {
# Histogram of the Old Faithful Geyser Data ----
# with requested number of bins
# This expression that generates a histogram is wrapped in a call
# to renderPlot to indicate that:
#
# 1. It is "reactive" and therefore should be automatically
#    re-executed when inputs (input$bins) change
# 2. Its output type is a plot
output$distPlot <- renderPlot({
x    <- faithful$waiting
bins <- seq(min(x), max(x), length.out = input$bins + 1)
hist(x, breaks = bins, col = "#75AADB", border = "white",
xlab = "Waiting time to next eruption (in mins)",
main = "Histogram of waiting times")
})
}
# Create Shiny app ----
shinyApp(ui = ui, server = server)
>>>>>>> 95e795910f29420f2f2e3cb81715d2da5cbfba85
<<<<<<< HEAD
library(shiny)
library(lubridate)
library(dplyr)
library(ggplot2)
library(threejs)
>>>>>>> 95e795910f29420f2f2e3cb81715d2da5cbfba85
# Define UI for app that draws a histogram ----
ui <- fluidPage(
includeCSS("styles.css"),
<<<<<<< HEAD
titlePanel("Application Title"),
tags$div(class="header", checked=NA,
tags$img(src = "http://media-s3-us-east-1.ceros.com/business-insider/images/2017/12/08/f7e1c323169d464797c86b950ea93eca/bi-graphics-02-greenhouse-gas-effect-warmed.gif", width = "100%", height = "100%")
),
tags$div(class="header", checked=NA,
h2("Overview"),
h3("Project Overview"),
p("Climate change is the number one global issue;
=======
#titlePanel("Application Title"),
tags$div(class="header", checked=NA,
tags$img(class="img", src = "http://media-s3-us-east-1.ceros.com/business-insider/images/2017/12/08/f7e1c323169d464797c86b950ea93eca/bi-graphics-02-greenhouse-gas-effect-warmed.gif", width = "78%", height = "78%")
),
tags$div(class="main", margin="0 50px", checked=NA,
h2("Overview"),
h3("Project Overview"),
p("Climate change is the number one global issue;
>>>>>>> 95e795910f29420f2f2e3cb81715d2da5cbfba85
rise in temperatures cause more severe weather,
crises with food and resources, and the spread of diseases.
This project provides information about rising temperatures,
CO2 emissions, and hurricanes that occur in the U.S.
Utilizing three datasets of annual average temperature,
annual CO2 emissions, and the number and severity of hurricanes
in the U.S. from 1900-2013, our team created visualizations for
readers to see the upward trend and connection of the consequences
<<<<<<< HEAD
of CO2 emissions on rising temperatures which catalyze natural."),
h3("Audience"),
p("This information is for anyone who is interested in the well-being
of our Earth and are curious about the negative effects of the rise
in CO2 emissions."),
h3("Data"),
p("Berkeley Earth (2013). Climate Change: Earth Surface Temperature Data;
Exploring global temperatures since 1750 [CSV File]. Retrieved from",
tags$a(href="https://www.kaggle.com/berkeleyearth/climate-change-earth-surface-temperature-data?fbclid=IwAR15pLhLDhfjHpjNu6k9_Nsgxj0NAQaJ3c_Gca0ILzLHuI_XDxxyiqTfI7I#GlobalLandTemperaturesByMajorCity.csv",
"here.")),
p("Thomas Boden, Gregg Marland, Robert Andres (2017). BP Statistical Review of World Energy [CSV File]. Retrieved from",
tags$a(href="https://www.globalcarbonproject.org/carbonbudget/18/data.htm?fbclid=IwAR3sVj1bOtncfY6FOBUG2266-1AsjJdWkZbTB84hntEgQ2zxZgLQc9K8aEk",
"here.")),
p("HURDAT (Hurricane Database) of the National Oceanic & Atmospheric Administration (NOAA) (2018). Data on Continental US Hurricane Impacts/Landfalls 1851-2018 [CSV File]. Retrieved from",
tags$a(href="https://ourworldindata.org/natural-disasters?fbclid=IwAR2CyKDcev7c9aDooU3n8RSqQpwvKlSNKoGhLFbpfJt4xIgySVP75f72edc",
"here.")),
h3("Structure"),
p("Contents go here"),
h3("Analytics"),
p("Contents go here"),
h3("Creators"),
p("Contents go here"),
),
tags$div(class="first", checked=NA,
h2("Rising temperatures and CO2 emissions"),
#EXAMPLE-------------------------------------------------------------
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Slider for the number of bins ----
dateInput(inputId = "select",
label = "Choose Date:",
min = "1849-01-01",
max = "2013-01-09",
value = "1990-01-01")
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Histogram ----
plotOutput(outputId = "globe")
)
)
),
#-------------------------------------------------------------
tags$div(class="second", checked=NA,
h2("Average Temperature Rise"),
mainPanel(
plotOutput(outputId = "plot")
)
),
tags$div(class="third", checked=NA,
h2("Gradient Rise"),
mainPanel(
plotOutput(outputId = "art")
)
)
)
=======
of CO2 emissions on rising temperatures which catalyze natural
disasters such as hurricanes that affect thousands of people."),
h3("Audience"),
p("This information is for anyone who is interested in the well-being
of our Earth and are curious about the negative effects of the rise
in CO2 emissions."),
h3("Data"),
p("Berkeley Earth (2013). Climate Change: Earth Surface Temperature Data;
Exploring global temperatures since 1750 [CSV File]. Retrieved from",
tags$a(href="https://www.kaggle.com/berkeleyearth/climate-change-earth-surface-temperature-data?fbclid=IwAR15pLhLDhfjHpjNu6k9_Nsgxj0NAQaJ3c_Gca0ILzLHuI_XDxxyiqTfI7I#GlobalLandTemperaturesByMajorCity.csv",
"here.")),
p("Thomas Boden, Gregg Marland, Robert Andres (2017). BP Statistical Review of World Energy [CSV File]. Retrieved from",
tags$a(href="https://www.globalcarbonproject.org/carbonbudget/18/data.htm?fbclid=IwAR3sVj1bOtncfY6FOBUG2266-1AsjJdWkZbTB84hntEgQ2zxZgLQc9K8aEk",
"here.")),
p("HURDAT (Hurricane Database) of the National Oceanic & Atmospheric Administration (NOAA) (2018). Data on Continental US Hurricane Impacts/Landfalls 1851-2018 [CSV File]. Retrieved from",
tags$a(href="https://ourworldindata.org/natural-disasters?fbclid=IwAR2CyKDcev7c9aDooU3n8RSqQpwvKlSNKoGhLFbpfJt4xIgySVP75f72edc",
"here.")),
h3("Structure"),
p("Contents go here"),
h3("Analytics"),
p("Contents go here"),
h3("Creators"),
p("Contents go here"),
),
tags$div(class="first", checked=NA,
h2("co2 emission"),
#EXAMPLE-------------------------------------------------------------
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Slider for the number of bins ----
sliderInput(inputId = "bins",
label = "Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Histogram ----
plotOutput(outputId = "distPlot")
)
)
#-------------------------------------------------------------
),
tags$div(class="second", checked=NA,
h2("avg temp rise"),
#GRAPH-------------------------------------------------------------
#------------------------------------------------------------------
),
tags$div(class="third", checked=NA,
h2("hot and cold graph")
#GRAPH-------------------------------------------------------------
#------------------------------------------------------------------
),
)
# Define server logic required to draw a histogram ----
server <- function(input, output) {
# Histogram of the Old Faithful Geyser Data ----
# with requested number of bins
# This expression that generates a histogram is wrapped in a call
# to renderPlot to indicate that:
#
# 1. It is "reactive" and therefore should be automatically
#    re-executed when inputs (input$bins) change
# 2. Its output type is a plot
output$distPlot <- renderPlot({
x    <- faithful$waiting
bins <- seq(min(x), max(x), length.out = input$bins + 1)
hist(x, breaks = bins, col = "#75AADB", border = "white",
xlab = "Waiting time to next eruption (in mins)",
main = "Histogram of waiting times")
})
}
# Create Shiny app ----
shinyApp(ui = ui, server = server)
>>>>>>> 95e795910f29420f2f2e3cb81715d2da5cbfba85
shiny::runApp('D:/Courses/INFO 201/Lecture exercises/Lecture-Shiny-App/Test')
runApp('D:/Courses/INFO 201/Lecture exercises/Lecture-Shiny-App/Test')
runApp('D:/Courses/INFO 201/Lecture exercises/Lecture-Shiny-App/Test')
runApp('D:/Courses/coding/Lollipop')
runApp('D:/Courses/coding/Lollipop')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
police_killings <- read.csv("data/fatal-police-shootings-data.csv",
stringsAsFactors = FALSE)
myChoices <- c("All", "W", "B", "A", "N", "H", "O", "None")
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
police_killings <- read.csv("data/fatal-police-shootings-data.csv",
stringsAsFactors = FALSE)
if (state %in% c("AK", "AZ", "CA", "CO", "HI", "ID", "MT", "NV", "NM",
"OR", "UT", "WA")) {
police_killings <- police_killings %>%
mutate(region = "West")
}
if (police_killings$state %in% c("AK", "AZ", "CA", "CO", "HI", "ID", "MT", "NV", "NM",
"OR", "UT", "WA")) {
police_killings <- police_killings %>%
mutate(region = "West")
}
if (c("AK", "AZ", "CA", "CO", "HI", "ID", "MT", "NV", "NM",
"OR", "UT", "WA") %in% police_killings$state) {
police_killings <- police_killings %>%
mutate(region = "West")
}
if (police_killings$state %in% c("AK", "AZ", "CA", "CO", "HI", "ID", "MT", "NV", "NM",
"OR", "UT", "WA")) {
police_killings <- police_killings %>%
mutate(region = "West")
}
View(police_killings)
shiny::runApp()
police_killings <- read.csv("data/police-killings.csv",
stringsAsFactors = FALSE)
police_killings <- read.csv("data/police-killings.csv",
stringsAsFactors = FALSE)
View(police_killings)
police_killings <- read.csv("data/police-killings.csv",
stringsAsFactors = FALSE)
View(police_killings)
View(police_killings)
police_killings <- read.csv("data/police-killings.csv",
stringsAsFactors = FALSE)
server <- function(input, output, session) {
police_killings <- read.csv("data/police-killings.csv",
stringsAsFactors = FALSE)
myChoices <- c("Select all" = "All",
"Caucasian" = "W",
"African" = "B",
"Asian" = "A",
"Native American" = "N",
"Hispanic" = "H",
"Other" = "O",
"Unknown" = "None")
#
# observe({
#   if (input$races == 0) {
#     updateCheckboxGroupInput(
#       session, "races", strong("Races:"), choices = myChoices,
#       selected = setdiff(myChoices, "All")
#     )
#   }
# })
#
if (police_killings$state %in% c("AK", "AZ", "CA", "CO", "HI", "ID", "MT", "NV", "NM",
"OR", "UT", "WA")) {
police_killings <- police_killings %>%
mutate(region = "West")
}
killings_by_state <- police_killings %>%
group_by(state)
}
View(police_killings)
police_killings <- read.csv("data/police-killings.csv",
stringsAsFactors = FALSE)
runApp()
killings_by_state <- police_killings %>%
group_by(region) %>%
filter(race == input$races)
selected_data <- reactive({
req(input$date)
validate(need(!is.na(input$date[1]) & !is.na(input$date[2]),
"Error: Please provide both a start and an end date."))
validate(need(input$date[1] < input$date[2],
"Error: Start date should be earlier than end date."))
killings_by_state <- police_killings %>%
filter(date > as.POSIXct(input$date[1]) & date < as.POSIXct(input$date[2])) %>%
group_by(region) %>%
filter(race == input$races)
})
shiny::runApp()
shiny::runApp()
