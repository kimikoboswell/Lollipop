return ("The strings have the same number of Zs.")
} else {
return ("Neither string contains the letter z.")
}
}
# Create a variable `more_zs` by passing two strings of your choice to your
# `has_more_zs` function
more_zs <- has_more_zs("zzZ", "I am going to zleep")
# Write a function `remove_digits` that will remove all digits
# (i.e., 0 through 9) from all elements in a *vector of strings*.
remove_digits <- function() {
}
# Demonstrate that your approach is successful by passing a vector of courses
# to your function. For example, remove_digits(c("INFO 201", "CSE 142"))
print(remove_digits())
# Vectors ----------------------------------------------------------------------
# Create a vector `movies` that contains the names of six movies you like
movies <- c("500 Days of Summer", "Shigatsu wa Kimi no Uso", "Before Sunrise",
"Ironman", "Crazy Rich Asians", "Avengers: Endgame")
# Create a vector `top_three` that only contains the first three movies
# You should do this by subsetting the vector, not by simply retyping the movies
# Using your vector and the `paste()` method, create a vector `excited` that
# adds the phrase - " is a great movie!" to the end of each element `movies`
# Create a vector `without_four` by omitting the fourth element from `movies`
# You should do this using a _negative index_
# Create a vector `multiples_of_4` that is every number divisible by 4
# between 4 and 400 (**2 points**)
# Create a vector `multiples_of_8` by filtering your `multiples_of_4` variable
# down to only elements that are divisible by 8.
# Create a vector `numbers` that is the numbers 700 through 999
# Using the built in `length()` function, create a variable `numbers_len`
# that is equal to the length of your vector `numbers`
# Using the `mean()` function, create a variable `numbers_mean` that is
# equal to the mean of your vector `numbers`
# Using the `median()` function, create a variable `numbers_median`
# that is the median of your vector `numbers`
# Create a vector `lower_numbers` that the values in your `numbers` vector
# that are lower than `numbers_mean` (you should do this using vector filtering)
# Create a vector `higher_numbers` that the values in your `numbers` vector
# that are higher than `numbers_mean` (again, using vector filtering)
# Lists ------------------------------------------------------------------------
# Create a list called `summary_info` in which you'll store summary information
# about the `numbers` vector above. The list should have the following keys:
# - `length`: in which you'll store the length of the vector
# - `mean`: in which you'll store the mean of the vector
# - `median`: in which you'll store the median of the vector
# Now, write a function called `summarize_vector` that takes in a vector of
# numbers, and returns a list of summary information about that vector
# (including the mean, median, and length)
#summarize_vector <- function() {
#
#}
# Create a variable `summary_1_to_100` by passing a vector of the values one
# through one hundred to your `summarize_vector` function
#summary_1_to_100 <-
install.packages(c("fastmap", "stringdist"))
library(shiny)
library(lubridate)
library(dplyr)
library(ggplot2)
library(threejs)
server <- function(input, output) {
z <- read.csv(file = "USTemp.csv")
z2 <- z %>%
dplyr::mutate(year = lubridate::year(z$dt),
month = lubridate::month(z$dt),
day = lubridate::day(z$dt))
result <- aggregate(z2$AverageTemperature ~ z2$year, z2, mean)
x <- read.csv(file = "GlobalLandTemperaturesByMajorCity.csv")
result2 <- aggregate(z2$AverageTemperature ~ z2$year, z2, range)
rr <- range(result2$`z2$AverageTemperature`)
svals <- (result2$`z2$AverageTemperature`-rr[1])/diff(rr)
f <- colorRamp(c("lightblue","blue", "red", "darkred"))
colors <- rgb(f(svals)/300)
output$plot <- renderPlot({
ggplot(result, aes(x = unlist((result$`z2$year`)), y = unlist(result$`z2$AverageTemperature`))) + geom_point() + geom_smooth()
})
get_globe_data <- reactive({
df <- filter(x, as.Date(x$dt) == input$select)
})
output$globe <- renderGlobe({
data <- get_globe_data()
globejs(bg = "black", lat = data$Latitude, long = data$Longitude, value = data$AverageTemperature)
})
output$art <- renderPlot({
image(seq_along(svals), 1, as.matrix(seq_along(svals)), col=colors,
axes=FALSE, xlab="Years", ylab="")
})
}
library(shiny)
library(lubridate)
library(dplyr)
library(ggplot2)
library(threejs)
server <- function(input, output) {
z <- read.csv(file = "USTemp.csv")
z2 <- z %>%
dplyr::mutate(year = lubridate::year(z$dt),
month = lubridate::month(z$dt),
day = lubridate::day(z$dt))
result <- aggregate(z2$AverageTemperature ~ z2$year, z2, mean)
x <- read.csv(file = "GlobalLandTemperaturesByMajorCity.csv")
result2 <- aggregate(z2$AverageTemperature ~ z2$year, z2, range)
rr <- range(result2$`z2$AverageTemperature`)
svals <- (result2$`z2$AverageTemperature`-rr[1])/diff(rr)
f <- colorRamp(c("lightblue","blue", "red", "darkred"))
colors <- rgb(f(svals)/300)
output$plot <- renderPlot({
ggplot(result, aes(x = unlist((result$`z2$year`)), y = unlist(result$`z2$AverageTemperature`))) + geom_point() + geom_smooth()
})
get_globe_data <- reactive({
df <- filter(x, as.Date(x$dt) == input$select)
})
output$globe <- renderGlobe({
data <- get_globe_data()
globejs(bg = "black", lat = data$Latitude, long = data$Longitude, value = data$AverageTemperature)
})
output$art <- renderPlot({
image(seq_along(svals), 1, as.matrix(seq_along(svals)), col=colors,
axes=FALSE, xlab="Years", ylab="")
})
}
library(shiny)
library(lubridate)
library(dplyr)
library(ggplot2)
library(threejs)
server <- function(input, output) {
z <- read.csv(file = "USTemp.csv")
z2 <- z %>%
dplyr::mutate(year = lubridate::year(z$dt),
month = lubridate::month(z$dt),
day = lubridate::day(z$dt))
result <- aggregate(z2$AverageTemperature ~ z2$year, z2, mean)
x <- read.csv(file = "GlobalLandTemperaturesByMajorCity.csv")
result2 <- aggregate(z2$AverageTemperature ~ z2$year, z2, range)
rr <- range(result2$`z2$AverageTemperature`)
svals <- (result2$`z2$AverageTemperature`-rr[1])/diff(rr)
f <- colorRamp(c("lightblue","blue", "red", "darkred"))
colors <- rgb(f(svals)/300)
output$plot <- renderPlot({
ggplot(result, aes(x = unlist((result$`z2$year`)), y = unlist(result$`z2$AverageTemperature`))) + geom_point() + geom_smooth()
})
get_globe_data <- reactive({
df <- filter(x, as.Date(x$dt) == input$select)
})
output$globe <- renderGlobe({
data <- get_globe_data()
globejs(bg = "black", lat = data$Latitude, long = data$Longitude, value = data$AverageTemperature)
})
output$art <- renderPlot({
image(seq_along(svals), 1, as.matrix(seq_along(svals)), col=colors,
axes=FALSE, xlab="Years", ylab="")
})
}
<<<<<<< HEAD
library(shiny)
library(lubridate)
library(dplyr)
library(ggplot2)
library(threejs)
=======
# Define UI for app that draws a histogram ----
ui <- fluidPage(
includeCSS("styles.css"),
<<<<<<< HEAD
titlePanel("Application Title"),
tags$div(class="header", checked=NA,
tags$img(src = "http://media-s3-us-east-1.ceros.com/business-insider/images/2017/12/08/f7e1c323169d464797c86b950ea93eca/bi-graphics-02-greenhouse-gas-effect-warmed.gif", width = "100%", height = "100%")
),
tags$div(class="header", checked=NA,
h2("Overview"),
h3("Project Overview"),
p("Climate change is the number one global issue;
=======
#titlePanel("Application Title"),
tags$div(class="header", checked=NA,
tags$img(class="img", src = "http://media-s3-us-east-1.ceros.com/business-insider/images/2017/12/08/f7e1c323169d464797c86b950ea93eca/bi-graphics-02-greenhouse-gas-effect-warmed.gif", width = "78%", height = "78%")
),
tags$div(class="main", margin="0 50px", checked=NA,
h2("Overview"),
h3("Project Overview"),
p("Climate change is the number one global issue;
>>>>>>> 95e795910f29420f2f2e3cb81715d2da5cbfba85
rise in temperatures cause more severe weather,
crises with food and resources, and the spread of diseases.
This project provides information about rising temperatures,
CO2 emissions, and hurricanes that occur in the U.S.
Utilizing three datasets of annual average temperature,
annual CO2 emissions, and the number and severity of hurricanes
in the U.S. from 1900-2013, our team created visualizations for
readers to see the upward trend and connection of the consequences
<<<<<<< HEAD
of CO2 emissions on rising temperatures which catalyze natural."),
h3("Audience"),
p("This information is for anyone who is interested in the well-being
of our Earth and are curious about the negative effects of the rise
in CO2 emissions."),
h3("Data"),
p("Berkeley Earth (2013). Climate Change: Earth Surface Temperature Data;
Exploring global temperatures since 1750 [CSV File]. Retrieved from",
tags$a(href="https://www.kaggle.com/berkeleyearth/climate-change-earth-surface-temperature-data?fbclid=IwAR15pLhLDhfjHpjNu6k9_Nsgxj0NAQaJ3c_Gca0ILzLHuI_XDxxyiqTfI7I#GlobalLandTemperaturesByMajorCity.csv",
"here.")),
p("Thomas Boden, Gregg Marland, Robert Andres (2017). BP Statistical Review of World Energy [CSV File]. Retrieved from",
tags$a(href="https://www.globalcarbonproject.org/carbonbudget/18/data.htm?fbclid=IwAR3sVj1bOtncfY6FOBUG2266-1AsjJdWkZbTB84hntEgQ2zxZgLQc9K8aEk",
"here.")),
p("HURDAT (Hurricane Database) of the National Oceanic & Atmospheric Administration (NOAA) (2018). Data on Continental US Hurricane Impacts/Landfalls 1851-2018 [CSV File]. Retrieved from",
tags$a(href="https://ourworldindata.org/natural-disasters?fbclid=IwAR2CyKDcev7c9aDooU3n8RSqQpwvKlSNKoGhLFbpfJt4xIgySVP75f72edc",
"here.")),
h3("Structure"),
p("Contents go here"),
h3("Analytics"),
p("Contents go here"),
h3("Creators"),
p("Contents go here"),
),
tags$div(class="first", checked=NA,
h2("Rising temperatures and CO2 emissions"),
#EXAMPLE-------------------------------------------------------------
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Slider for the number of bins ----
dateInput(inputId = "select",
label = "Choose Date:",
min = "1849-01-01",
max = "2013-01-09",
value = "1990-01-01")
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Histogram ----
plotOutput(outputId = "globe")
)
)
),
#-------------------------------------------------------------
tags$div(class="second", checked=NA,
h2("Average Temperature Rise"),
mainPanel(
plotOutput(outputId = "plot")
)
),
tags$div(class="third", checked=NA,
h2("Gradient Rise"),
mainPanel(
plotOutput(outputId = "art")
)
)
)
=======
of CO2 emissions on rising temperatures which catalyze natural
disasters such as hurricanes that affect thousands of people."),
h3("Audience"),
p("This information is for anyone who is interested in the well-being
of our Earth and are curious about the negative effects of the rise
in CO2 emissions."),
h3("Data"),
p("Berkeley Earth (2013). Climate Change: Earth Surface Temperature Data;
Exploring global temperatures since 1750 [CSV File]. Retrieved from",
tags$a(href="https://www.kaggle.com/berkeleyearth/climate-change-earth-surface-temperature-data?fbclid=IwAR15pLhLDhfjHpjNu6k9_Nsgxj0NAQaJ3c_Gca0ILzLHuI_XDxxyiqTfI7I#GlobalLandTemperaturesByMajorCity.csv",
"here.")),
p("Thomas Boden, Gregg Marland, Robert Andres (2017). BP Statistical Review of World Energy [CSV File]. Retrieved from",
tags$a(href="https://www.globalcarbonproject.org/carbonbudget/18/data.htm?fbclid=IwAR3sVj1bOtncfY6FOBUG2266-1AsjJdWkZbTB84hntEgQ2zxZgLQc9K8aEk",
"here.")),
p("HURDAT (Hurricane Database) of the National Oceanic & Atmospheric Administration (NOAA) (2018). Data on Continental US Hurricane Impacts/Landfalls 1851-2018 [CSV File]. Retrieved from",
tags$a(href="https://ourworldindata.org/natural-disasters?fbclid=IwAR2CyKDcev7c9aDooU3n8RSqQpwvKlSNKoGhLFbpfJt4xIgySVP75f72edc",
"here.")),
h3("Structure"),
p("Contents go here"),
h3("Analytics"),
p("Contents go here"),
h3("Creators"),
p("Contents go here"),
),
tags$div(class="first", checked=NA,
h2("co2 emission"),
#EXAMPLE-------------------------------------------------------------
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Slider for the number of bins ----
sliderInput(inputId = "bins",
label = "Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Histogram ----
plotOutput(outputId = "distPlot")
)
)
#-------------------------------------------------------------
),
tags$div(class="second", checked=NA,
h2("avg temp rise"),
#GRAPH-------------------------------------------------------------
#------------------------------------------------------------------
),
tags$div(class="third", checked=NA,
h2("hot and cold graph")
#GRAPH-------------------------------------------------------------
#------------------------------------------------------------------
),
)
# Define server logic required to draw a histogram ----
server <- function(input, output) {
# Histogram of the Old Faithful Geyser Data ----
# with requested number of bins
# This expression that generates a histogram is wrapped in a call
# to renderPlot to indicate that:
#
# 1. It is "reactive" and therefore should be automatically
#    re-executed when inputs (input$bins) change
# 2. Its output type is a plot
output$distPlot <- renderPlot({
x    <- faithful$waiting
bins <- seq(min(x), max(x), length.out = input$bins + 1)
hist(x, breaks = bins, col = "#75AADB", border = "white",
xlab = "Waiting time to next eruption (in mins)",
main = "Histogram of waiting times")
})
}
# Create Shiny app ----
shinyApp(ui = ui, server = server)
>>>>>>> 95e795910f29420f2f2e3cb81715d2da5cbfba85
<<<<<<< HEAD
library(shiny)
library(lubridate)
library(dplyr)
library(ggplot2)
library(threejs)
>>>>>>> 95e795910f29420f2f2e3cb81715d2da5cbfba85
# Define UI for app that draws a histogram ----
ui <- fluidPage(
includeCSS("styles.css"),
<<<<<<< HEAD
titlePanel("Application Title"),
tags$div(class="header", checked=NA,
tags$img(src = "http://media-s3-us-east-1.ceros.com/business-insider/images/2017/12/08/f7e1c323169d464797c86b950ea93eca/bi-graphics-02-greenhouse-gas-effect-warmed.gif", width = "100%", height = "100%")
),
tags$div(class="header", checked=NA,
h2("Overview"),
h3("Project Overview"),
p("Climate change is the number one global issue;
=======
#titlePanel("Application Title"),
tags$div(class="header", checked=NA,
tags$img(class="img", src = "http://media-s3-us-east-1.ceros.com/business-insider/images/2017/12/08/f7e1c323169d464797c86b950ea93eca/bi-graphics-02-greenhouse-gas-effect-warmed.gif", width = "78%", height = "78%")
),
tags$div(class="main", margin="0 50px", checked=NA,
h2("Overview"),
h3("Project Overview"),
p("Climate change is the number one global issue;
>>>>>>> 95e795910f29420f2f2e3cb81715d2da5cbfba85
rise in temperatures cause more severe weather,
crises with food and resources, and the spread of diseases.
This project provides information about rising temperatures,
CO2 emissions, and hurricanes that occur in the U.S.
Utilizing three datasets of annual average temperature,
annual CO2 emissions, and the number and severity of hurricanes
in the U.S. from 1900-2013, our team created visualizations for
readers to see the upward trend and connection of the consequences
<<<<<<< HEAD
of CO2 emissions on rising temperatures which catalyze natural."),
h3("Audience"),
p("This information is for anyone who is interested in the well-being
of our Earth and are curious about the negative effects of the rise
in CO2 emissions."),
h3("Data"),
p("Berkeley Earth (2013). Climate Change: Earth Surface Temperature Data;
Exploring global temperatures since 1750 [CSV File]. Retrieved from",
tags$a(href="https://www.kaggle.com/berkeleyearth/climate-change-earth-surface-temperature-data?fbclid=IwAR15pLhLDhfjHpjNu6k9_Nsgxj0NAQaJ3c_Gca0ILzLHuI_XDxxyiqTfI7I#GlobalLandTemperaturesByMajorCity.csv",
"here.")),
p("Thomas Boden, Gregg Marland, Robert Andres (2017). BP Statistical Review of World Energy [CSV File]. Retrieved from",
tags$a(href="https://www.globalcarbonproject.org/carbonbudget/18/data.htm?fbclid=IwAR3sVj1bOtncfY6FOBUG2266-1AsjJdWkZbTB84hntEgQ2zxZgLQc9K8aEk",
"here.")),
p("HURDAT (Hurricane Database) of the National Oceanic & Atmospheric Administration (NOAA) (2018). Data on Continental US Hurricane Impacts/Landfalls 1851-2018 [CSV File]. Retrieved from",
tags$a(href="https://ourworldindata.org/natural-disasters?fbclid=IwAR2CyKDcev7c9aDooU3n8RSqQpwvKlSNKoGhLFbpfJt4xIgySVP75f72edc",
"here.")),
h3("Structure"),
p("Contents go here"),
h3("Analytics"),
p("Contents go here"),
h3("Creators"),
p("Contents go here"),
),
tags$div(class="first", checked=NA,
h2("Rising temperatures and CO2 emissions"),
#EXAMPLE-------------------------------------------------------------
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Slider for the number of bins ----
dateInput(inputId = "select",
label = "Choose Date:",
min = "1849-01-01",
max = "2013-01-09",
value = "1990-01-01")
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Histogram ----
plotOutput(outputId = "globe")
)
)
),
#-------------------------------------------------------------
tags$div(class="second", checked=NA,
h2("Average Temperature Rise"),
mainPanel(
plotOutput(outputId = "plot")
)
),
tags$div(class="third", checked=NA,
h2("Gradient Rise"),
mainPanel(
plotOutput(outputId = "art")
)
)
)
=======
of CO2 emissions on rising temperatures which catalyze natural
disasters such as hurricanes that affect thousands of people."),
h3("Audience"),
p("This information is for anyone who is interested in the well-being
of our Earth and are curious about the negative effects of the rise
in CO2 emissions."),
h3("Data"),
p("Berkeley Earth (2013). Climate Change: Earth Surface Temperature Data;
Exploring global temperatures since 1750 [CSV File]. Retrieved from",
tags$a(href="https://www.kaggle.com/berkeleyearth/climate-change-earth-surface-temperature-data?fbclid=IwAR15pLhLDhfjHpjNu6k9_Nsgxj0NAQaJ3c_Gca0ILzLHuI_XDxxyiqTfI7I#GlobalLandTemperaturesByMajorCity.csv",
"here.")),
p("Thomas Boden, Gregg Marland, Robert Andres (2017). BP Statistical Review of World Energy [CSV File]. Retrieved from",
tags$a(href="https://www.globalcarbonproject.org/carbonbudget/18/data.htm?fbclid=IwAR3sVj1bOtncfY6FOBUG2266-1AsjJdWkZbTB84hntEgQ2zxZgLQc9K8aEk",
"here.")),
p("HURDAT (Hurricane Database) of the National Oceanic & Atmospheric Administration (NOAA) (2018). Data on Continental US Hurricane Impacts/Landfalls 1851-2018 [CSV File]. Retrieved from",
tags$a(href="https://ourworldindata.org/natural-disasters?fbclid=IwAR2CyKDcev7c9aDooU3n8RSqQpwvKlSNKoGhLFbpfJt4xIgySVP75f72edc",
"here.")),
h3("Structure"),
p("Contents go here"),
h3("Analytics"),
p("Contents go here"),
h3("Creators"),
p("Contents go here"),
),
tags$div(class="first", checked=NA,
h2("co2 emission"),
#EXAMPLE-------------------------------------------------------------
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Slider for the number of bins ----
sliderInput(inputId = "bins",
label = "Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Histogram ----
plotOutput(outputId = "distPlot")
)
)
#-------------------------------------------------------------
),
tags$div(class="second", checked=NA,
h2("avg temp rise"),
#GRAPH-------------------------------------------------------------
#------------------------------------------------------------------
),
tags$div(class="third", checked=NA,
h2("hot and cold graph")
#GRAPH-------------------------------------------------------------
#------------------------------------------------------------------
),
)
# Define server logic required to draw a histogram ----
server <- function(input, output) {
# Histogram of the Old Faithful Geyser Data ----
# with requested number of bins
# This expression that generates a histogram is wrapped in a call
# to renderPlot to indicate that:
#
# 1. It is "reactive" and therefore should be automatically
#    re-executed when inputs (input$bins) change
# 2. Its output type is a plot
output$distPlot <- renderPlot({
x    <- faithful$waiting
bins <- seq(min(x), max(x), length.out = input$bins + 1)
hist(x, breaks = bins, col = "#75AADB", border = "white",
xlab = "Waiting time to next eruption (in mins)",
main = "Histogram of waiting times")
})
}
# Create Shiny app ----
shinyApp(ui = ui, server = server)
>>>>>>> 95e795910f29420f2f2e3cb81715d2da5cbfba85
shiny::runApp('D:/Courses/INFO 201/Lecture exercises/Lecture-Shiny-App/Test')
runApp('D:/Courses/INFO 201/Lecture exercises/Lecture-Shiny-App/Test')
runApp('D:/Courses/INFO 201/Lecture exercises/Lecture-Shiny-App/Test')
runApp('D:/Courses/coding/Lollipop')
runApp('D:/Courses/coding/Lollipop')
shiny::runApp()
shiny::runApp()
