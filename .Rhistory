value = "1990-01-01")
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Histogram ----
plotOutput(outputId = "globe")
)
)
),
#-------------------------------------------------------------
tags$div(class="second", checked=NA,
h2("Average Temperature Rise"),
mainPanel(
plotOutput(outputId = "plot")
)
),
tags$div(class="third", checked=NA,
h2("Gradient Rise"),
mainPanel(
plotOutput(outputId = "art")
)
)
)
=======
of CO2 emissions on rising temperatures which catalyze natural
disasters such as hurricanes that affect thousands of people."),
h3("Audience"),
p("This information is for anyone who is interested in the well-being
of our Earth and are curious about the negative effects of the rise
in CO2 emissions."),
h3("Data"),
p("Berkeley Earth (2013). Climate Change: Earth Surface Temperature Data;
Exploring global temperatures since 1750 [CSV File]. Retrieved from",
tags$a(href="https://www.kaggle.com/berkeleyearth/climate-change-earth-surface-temperature-data?fbclid=IwAR15pLhLDhfjHpjNu6k9_Nsgxj0NAQaJ3c_Gca0ILzLHuI_XDxxyiqTfI7I#GlobalLandTemperaturesByMajorCity.csv",
"here.")),
p("Thomas Boden, Gregg Marland, Robert Andres (2017). BP Statistical Review of World Energy [CSV File]. Retrieved from",
tags$a(href="https://www.globalcarbonproject.org/carbonbudget/18/data.htm?fbclid=IwAR3sVj1bOtncfY6FOBUG2266-1AsjJdWkZbTB84hntEgQ2zxZgLQc9K8aEk",
"here.")),
p("HURDAT (Hurricane Database) of the National Oceanic & Atmospheric Administration (NOAA) (2018). Data on Continental US Hurricane Impacts/Landfalls 1851-2018 [CSV File]. Retrieved from",
tags$a(href="https://ourworldindata.org/natural-disasters?fbclid=IwAR2CyKDcev7c9aDooU3n8RSqQpwvKlSNKoGhLFbpfJt4xIgySVP75f72edc",
"here.")),
h3("Structure"),
p("Contents go here"),
h3("Analytics"),
p("Contents go here"),
h3("Creators"),
p("Contents go here"),
),
tags$div(class="first", checked=NA,
h2("co2 emission"),
#EXAMPLE-------------------------------------------------------------
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Slider for the number of bins ----
sliderInput(inputId = "bins",
label = "Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Histogram ----
plotOutput(outputId = "distPlot")
)
)
#-------------------------------------------------------------
),
tags$div(class="second", checked=NA,
h2("avg temp rise"),
#GRAPH-------------------------------------------------------------
#------------------------------------------------------------------
),
tags$div(class="third", checked=NA,
h2("hot and cold graph")
#GRAPH-------------------------------------------------------------
#------------------------------------------------------------------
),
)
# Define server logic required to draw a histogram ----
server <- function(input, output) {
# Histogram of the Old Faithful Geyser Data ----
# with requested number of bins
# This expression that generates a histogram is wrapped in a call
# to renderPlot to indicate that:
#
# 1. It is "reactive" and therefore should be automatically
#    re-executed when inputs (input$bins) change
# 2. Its output type is a plot
output$distPlot <- renderPlot({
x    <- faithful$waiting
bins <- seq(min(x), max(x), length.out = input$bins + 1)
hist(x, breaks = bins, col = "#75AADB", border = "white",
xlab = "Waiting time to next eruption (in mins)",
main = "Histogram of waiting times")
})
}
# Create Shiny app ----
shinyApp(ui = ui, server = server)
>>>>>>> 95e795910f29420f2f2e3cb81715d2da5cbfba85
cities_latlng <- mapply(GN_search_US,
unique_cities$city[1:1000],
unique_cities$state[1:1000])
library(lubridate)
library(dplyr)
library(ggplot2)
library(leaflet)
library(geonames)
police_killings <- read.csv("data/police-killings.csv",
stringsAsFactors = FALSE)
# usernames: batman, harley
options(geonamesUsername = "batman")
GN_search_US <- function(city, state) {
res <- GNsearch(name=city, adminCode1=state, country="US")
return(res[1, ])
}
unique_cities <- police_killings %>%
select(city, state) %>%
unique()
police_killings <- read.csv("data/police-killings.csv",
stringsAsFactors = FALSE)
setwd("D:/Courses/coding/Lollipop")
police_killings <- read.csv("data/police-killings.csv",
stringsAsFactors = FALSE)
unique_cities <- police_killings %>%
select(city, state) %>%
unique()
cities_latlng <- mapply(GN_search_US,
unique_cities$city[1:1000],
unique_cities$state[1:1000])
cities_latlng2 <- mapply(GN_search_US,
unique_cities$city[1001:2000],
unique_cities$state[1001:2000])
# usernames: batman, harley
options(geonamesUsername = "harley")
cities_latlng3 <- mapply(GN_search_US,
unique_cities$city[2001:2507],
unique_cities$state[2001:2507])
source('D:/Courses/coding/Lollipop/code.r')
# usernames: batman, harley
options(geonamesUsername = "kabuyaki")
View(cities_latlng3)
View(cities_latlng2)
View(cities_latlng3)
cities_latlng3 <- mapply(GN_search_US,
unique_cities$city[2001:2506],
unique_cities$state[2001:2506])
try <- do.call("rbind", cities_latlng) %>%
select(name, lat, lng)
try <- try %>%
cbind(city = rownames(try), stringsAsFactors = FALSE) %>%
select(city, lat, lng)
try2 <- do.call("rbind", cities_latlng2) %>%
select(name, lat, lng)
try2 <- try2 %>%
cbind(city = rownames(try2), stringsAsFactors = FALSE) %>%
select(city, lat, lng)
try3 <- do.call("rbind", cities_latlng3) %>%
select(name, lat, lng)
try3 <-  try3 %>%
cbind(city = rownames(try3), stringsAsFactors = FALSE) %>%
select(city, lat, lng)
View(try)
View(cities_latlng)
View(cities_latlng2)
View(cities_latlng3)
View(cities_latlng[["CaÃ±on City"]])
police_killings <- read.csv("data/police-killings.csv",
stringsAsFactors = FALSE)
add <- read.csv(textConnection(
"city,lat,lng
Mt. Auburn,39.12009,-84.50748
Pinion Hills,34.43309,-117.64696
West Goshen,36.34861,-119.41914
North Laredo,29.44003,-98.50469
St. Martin,30.44284,-88.86521
East Hollywood,34.09387,-118.29600
Big Bear,38.33218,-92.68891
Mt. Pleasant,35.53490,-87.20629
Mt. Airy,39.37624,-77.15569
North Fort Collins,40.57638,-105.08571
300 block of State Line Road,36.34703,-88.71033
Standing Rock Reservation,45.75307,-101.21129
Charleston View,35.96843,-115.89417
Pelehatchie,32.31241,-89.80421
Friendly Hills,39.63036,-105.13671"
))
try <- do.call("rbind", cities_latlng) %>%
select(name, lat, lng)
try <- try %>%
cbind(city = rownames(try), stringsAsFactors = FALSE) %>%
select(city, lat, lng)
try2 <- do.call("rbind", cities_latlng2) %>%
select(name, lat, lng)
try2 <- try2 %>%
cbind(city = rownames(try2), stringsAsFactors = FALSE) %>%
select(city, lat, lng)
try3 <- do.call("rbind", cities_latlng3) %>%
select(name, lat, lng)
try3 <-  try3 %>%
cbind(city = rownames(try3), stringsAsFactors = FALSE) %>%
select(city, lat, lng)
all_latlng <- rbind(try,
try2,
try3,
add)
police_killings <- left_join(police_killings, all_latlng, by = "city")
write.csv(police_killings, "data/police-killings-with-latlng.csv", row.names = FALSE)
killings_by_state <- police_killings %>%
group_by(state, gender)
killings_by_state <- killings_by_state %>%
summarize(deaths = n(),
lat = sum(as.numeric(lat)/n()),
lng = sum(as.numeric(lng)/n()))
leaflet(data = killings_by_state) %>%
addProviderTiles("CartoDB.Positron") %>%
setView(lng = -98.5795, lat = 39.8283, zoom = 4) %>%
addCircles(
lat = ~lat,
lng = ~lng,
radius = ~deaths * 1610,
stroke = FALSE
)
killings_by_state <- police_killings %>%
group_by(state)
killings_by_state <- killings_by_state %>%
summarize(deaths = n(),
lat = sum(as.numeric(lat)/n()),
lng = sum(as.numeric(lng)/n()))
leaflet(data = killings_by_state) %>%
addProviderTiles("CartoDB.Positron") %>%
setView(lng = -98.5795, lat = 39.8283, zoom = 4) %>%
addCircles(
lat = ~lat,
lng = ~lng,
radius = ~deaths * 1610,
stroke = FALSE
)
killings_by_state <- police_killings %>%
group_by(state)
police_killings <- read.csv("data/police-killings.csv",
stringsAsFactors = FALSE)
add <- read.csv(textConnection(
"city,lat,lng
Mt. Auburn,39.12009,-84.50748
Pinion Hills,34.43309,-117.64696
West Goshen,36.34861,-119.41914
North Laredo,29.44003,-98.50469
St. Martin,30.44284,-88.86521
East Hollywood,34.09387,-118.29600
Big Bear,38.33218,-92.68891
Mt. Pleasant,35.53490,-87.20629
Mt. Airy,39.37624,-77.15569
North Fort Collins,40.57638,-105.08571
300 block of State Line Road,36.34703,-88.71033
Standing Rock Reservation,45.75307,-101.21129
Charleston View,35.96843,-115.89417
Pelehatchie,32.31241,-89.80421
Friendly Hills,39.63036,-105.13671"
))
all_latlng <- rbind(try,
try2,
try3,
add)
police_killings <- left_join(police_killings, all_latlng, by = "city")
police_killings <- read.csv("data/police-killings.csv",
stringsAsFactors = FALSE)
police_killings <- inner_join(police_killings, all_latlng, by = "city")
all_latlng %>% unique() %>% View()
check <- all_latlng %>% unique() %>% View()
check <- all_latlng %>% unique() %>% View()
check <- all_latlng %>% unique()
check <- all_latlng %>% unique(city)
check <- all_latlng %>% unique(city)
View(cities_latlng)
View(cities_latlng2)
View(cities_latlng3)
View(unique_cities)
cities_latlng2 <- mapply(GN_search_US,
unique_cities$city[1001:2000],
unique_cities$state[1001:2000])
View(check)
View(cities_latlng2)
View(unique_cities[1001:2000])
View(unique_cities$city[1001:2000])
View(unique_cities$state[1001:2000])
View(cities_latlng)
try <- do.call("rbind", cities_latlng) %>%
select(name, state = adminCode1, lat, lng)
try <- try %>%
cbind(city = rownames(try), stringsAsFactors = FALSE) %>%
select(city, lat, lng)
try <- do.call("rbind", cities_latlng) %>%
select(name, state = adminCode1, lat, lng)
try <- try %>%
cbind(city = rownames(try), stringsAsFactors = FALSE) %>%
select(city, state, lat, lng)
View(try)
try <- do.call("rbind", cities_latlng) %>%
select(name, state = adminCode1, lat, lng)
View(try)
try <- try %>%
cbind(city = rownames(try), stringsAsFactors = FALSE) %>%
select(city, state, lat, lng)
try <- do.call("rbind", cities_latlng) %>%
select(name, state = adminCode1, lat, lng)
try <- try %>%
cbind(city = rownames(try), stringsAsFactors = FALSE) %>%
select(city, state, lat, lng)
try2 <- do.call("rbind", cities_latlng2) %>%
select(name, state = adminCode1, lat, lng)
try2 <- try2 %>%
cbind(city = rownames(try2), stringsAsFactors = FALSE) %>%
select(city, state, lat, lng)
try3 <- do.call("rbind", cities_latlng3) %>%
select(name, state = adminCode1, lat, lng)
try3 <-  try3 %>%
cbind(city = rownames(try3), stringsAsFactors = FALSE) %>%
select(city, state, lat, lng)
add <- read.csv(textConnection(
"city,state,lat,lng
Mt. Auburn,OH,39.12009,-84.50748
Pinion Hills,CA,34.43309,-117.64696
West Goshen,CA,36.34861,-119.41914
North Laredo,TX,29.44003,-98.50469
St. Martin,MS,30.44284,-88.86521
East Hollywood,CA,34.09387,-118.29600
Big Bear,MO,38.33218,-92.68891
Mt. Pleasant,TN,35.53490,-87.20629
Mt. Airy,MD,39.37624,-77.15569
North Fort Collins,CO,40.57638,-105.08571
300 block of State Line Road,TN,36.34703,-88.71033
Standing Rock Reservation,ND,45.75307,-101.21129
Charleston View,CA,35.96843,-115.89417
Pelehatchie,MS,32.31241,-89.80421
Friendly Hills,CO,39.63036,-105.13671"
))
all_latlng <- rbind(try,
try2,
try3,
add)
police_killings <- inner_join(police_killings, all_latlng, by = "city")
police_killings <- inner_join(police_killings, all_latlng, by = "city")
police_killings <- read.csv("data/police-killings.csv",
stringsAsFactors = FALSE)
police_killings <- left_join(police_killings, all_latlng, by = c("city", "state"))
View(try)
View(try2)
View(cities_latlng2)
for (val in all_latlng$city) {
all_latlng[all_latlng$city == val, ] <- gsub("\\d+",
"",
all_latlng[all_latlng$city == val, ])
}
View(all_latlng)
all_latlng <- rbind(try,
try2,
try3,
add)
for (val in all_latlng$city) {
all_latlng[all_latlng$city == val, ] <- gsub("\\d+",
"",
val)
}
all_latlng <- rbind(try,
try2,
try3,
add)
for (val in all_latlng$city) {
all_latlng[all_latlng$city == val, city] <- gsub("\\d+",
"",
val)
}
all_latlng[all_latlng$city == val, "city"] <- gsub("\\d+",
"",
val)
for (val in all_latlng$city) {
val <- gsub("\\d+",
"",
val)
}
all_latlng <- rbind(try,
try2,
try3,
add)
for (val in all_latlng$city) {
all_latlng[all_latlng$city == val, "city"] <- gsub("\\d+",
"",
val)
}
police_killings <- left_join(police_killings, all_latlng, by = c("city", "state"))
write.csv(police_killings, "data/police-killings-with-latlng.csv", row.names = FALSE)
police_killings <- read.csv("data/police-killings.csv",
stringsAsFactors = FALSE)
police_killings <- left_join(police_killings, all_latlng, by = c("city", "state"))
all_latlng <- rbind(try,
try2,
try3,
add)
for (val in all_latlng$city) {
all_latlng[all_latlng$city == val, "city"] <- gsub("\\d",
"",
val)
}
police_killings <- read.csv("data/police-killings.csv",
stringsAsFactors = FALSE)
police_killings <- left_join(police_killings, all_latlng, by = c("city", "state"))
all_latlng <- rbind(try,
try2,
try3,
add)
for (val in all_latlng$city) {
all_latlng[all_latlng$city == val, "city"] <- gsub("\\d+",
"",
val)
}
withnum <- read.csv(textConnection(
"city,state,lat,lng
300 block of State Line Road,TN,36.34703,-88.71033"
))
police_killings <- read.csv("data/police-killings.csv",
stringsAsFactors = FALSE)
police_killings <- left_join(police_killings, all_latlng, by = c("city", "state"))
police_killings <- read.csv("data/police-killings.csv",
stringsAsFactors = FALSE)
all_latlng <- rbind(try,
try2,
try3,
add)
for (val in all_latlng$city) {
all_latlng[all_latlng$city == val, "city"] <- gsub("\\d+",
"",
val)
}
withnum <- read.csv(textConnection(
"city,state,lat,lng
300 block of State Line Road,TN,36.34703,-88.71033"
))
all_latlng <- rbind(all_latlng,
withnum)
police_killings <- left_join(police_killings, all_latlng, by = c("city", "state"))
police_killings <- read.csv("data/police-killings.csv",
stringsAsFactors = FALSE)
all_latlng <- rbind(try,
try2,
try3,
add)
for (val in all_latlng$city) {
all_latlng[all_latlng$city == val, "city"] <- gsub("\\d+",
"",
val)
}
withnum <- read.csv(textConnection(
"city,state,lat,lng
300 block of State Line Road,TN,36.34703,-88.71033"
))
all_latlng <- rbind(all_latlng,
withnum)
police_killings <- left_join(police_killings, all_latlng, by = c("city", "state"))
write.csv(police_killings, "data/police-killings-with-latlng.csv", row.names = FALSE)
killings_by_state <- police_killings %>%
group_by(state)
killings_by_state <- killings_by_state %>%
summarize(deaths = n(),
lat = sum(as.numeric(lat)/n()),
lng = sum(as.numeric(lng)/n()))
leaflet(data = killings_by_state) %>%
addProviderTiles("CartoDB.Positron") %>%
setView(lng = -98.5795, lat = 39.8283, zoom = 4) %>%
addCircles(
lat = ~lat,
lng = ~lng,
radius = ~deaths * 1610,
stroke = FALSE
)
killings_by_region <- police_killings %>%
group_by(region)
killings_by_region$race <- factor(killings_by_region$race,
levels = c("W", "B", "A", "N", "H", "O", ""))
ggplot(data = killings_by_region, aes(region, fill = race)) +
geom_bar(stat = "count", position = "dodge") +
labs(x = "Region",
y = "Deaths",
title = "Deaths by Police Shootings") +
scale_fill_manual(
name = "Races",
values = c("#800080", "#4b0082", "#0000ff", "#00ff00", "#ffff00",
"#ffa500", "#ff0000"),
breaks = c("W", "B", "A", "N", "H", "O", ""),
labels = c("Caucasian", "African", "Asian", "Native American",
"Hispanic", "Other", "Unknown")
)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
ibrary(shiny)
library(shinythemes)
library(lubridate)
library(dplyr)
library(ggplot2)
library(leaflet)
# Load packages
library(shiny)
library(shinythemes)
library(lubridate)
library(dplyr)
library(ggplot2)
library(leaflet)
runApp()
